= f = form_for @changeset, "#",
  id: "document-form",
  phx_target: @myself.cid,
  phx_change: "validate",
  phx_submit: "save" 

  .field
    = Layout.text_input(f, :name, [ ], "control is-expanded")

  .field
    = Layout.text_input(f, :title, [], "control is-expanded")

  .field
    = Layout.select_input(f, :project_id, @select_lists.projects, 
      [ selected: @current_project.id || "", ], "control") 

  = inputs_for f, :document_versions, fn fdv ->
    .field.is-grouped
      = Layout.select_input(fdv, :version_id, @select_lists.versions, 
        [ selected: fdv.data.version_id || @current_version.id || "", ], "control")
      = Layout.text_input(fdv, :name, 
        [ value: Ecto.Changeset.get_change(fdv.source, :name, nil) || (f.data.name <> " (" <> (UserDocs.Projects.get_version!(@current_version.id) |> Map.get(:name)) <> ")") ], 
        "control is-expanded") 
      = if is_nil fdv.data.temp_id do
        = Layout.checkbox fdv, :delete
      - else
        = hidden_input fdv, :temp_id
        .field    
          = label(fdv, :delete, class: "label")
          .control
            = link(to: "#", phx_click: "remove-document-version", phx_value_remove: fdv.data.temp_id, phx_target: @myself.cid) do
              i.fa.fa-2x.fa-ban

  = error_tag(f, :document_versions)
  = if f.data.id do 
    .field
      = link to: "#", phx_click: "add-document-version", phx_target: @myself.cid do
        i.fa.fa-lg.fa-plus-square 
        span< Add Document Version

  .buttons
    = submit "Save", phx_disable_with: "Saving...", class: "button is-link"
</form>
