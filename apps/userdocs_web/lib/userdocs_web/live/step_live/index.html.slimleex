= ComposableBreadCrumb.render([ items: [%{ to: Routes.team_index_path(@socket, :index), name: "Teams"},
  %{ to: Routes.project_index_path(@socket, :index), name: @current_team.name },
  %{ to: Routes.version_index_path(@socket, :index), name: @current_project.name },
  %{ to: Routes.process_index_path(@socket, :index), name: @current_version.name }],
  last_item: %{ to: "", name: @process.name } ])
.columns  
  .column
    = if @live_action in [:edit, :new] do
      = live_modal @socket, UserDocsWeb.StepLive.FormComponent,
        id: @step.id || :new,
        parent: @process,
        parent_id: @process.id,
        type: Step,
        current_version: @current_version,
        current_team: @current_team,
        state_opts: @state_opts,
        parent_id: @process.id,
        title: @page_title,
        action: @live_action,
        step: @step,
        select_lists: @select_lists,
        data: @data,
        app_name: @app_name,
        default_page_id: RecentPage.get_id(@steps, @step, @data.pages),
        data: @data,
        return_to: Routes.step_index_path(@socket, :index, @process.id),
        select_lists: @select_lists,
        new_element: false,
        new_annotation: false,
        transferred_selector: @transferred_selector,
        transferred_strategy: @transferred_strategy

    = live_component(@socket, UserDocsWeb.ProcessLive.Runner, 
      [ id: "process-" <> Integer.to_string(@process.id) <> "-runner",
      process: @process,
      app_name: @app_name ])

    = live_component(@socket, UserDocsWeb.ProcessLive.Queuer, 
      [ id: "process-" <> Integer.to_string(@process.id) <> "-queuer",
      process: @process,
      app_name: @app_name ])

    aside.menu 
      ul.menu-list
        = for step <- @steps do
          li class=""
            .is-flex
              = link to: "", class: "is-flex-grow-1" do 
                = step.name
              .is-flex.is-flex-direction-row.is-flex-grow-0
                = live_component(@socket, Queuer, 
                  [ id: "step-" <> Integer.to_string(step.id) <> "-queuer",
                  step: step, 
                  app_name: @app_name,
                  step_type_name: step.step_type.name])
                = live_component(@socket, Runner, 
                  [ id: "step-" <> Integer.to_string(step.id),
                  step: step, 
                  app_name: @app_name,
                  current_user: @current_user,
                  step_type_name: step.step_type.name])
                = live_patch class: "navbar-item", to: Routes.step_index_path(@socket, :edit, step.id) do
                  i.fa.fa-lg.fa-edit


    = live_patch to: Routes.step_index_path(@socket, :new, @process.id) do
      button.button.is-primary New Step
  .column 
    = live_component @socket,
      UserDocsWeb.AutomationBrowserHandlerLive, 
      [ id: "automation-browser-handler",
        current_user: @current_user ]
    
    = if @app_name == "electron" do
      = live_component @socket,
        UserDocsWeb.AutomationManagerLive,
        [ id: "automation-manager", app_name: @app_name ]
