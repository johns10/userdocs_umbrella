<main role="main" class="container">
  <%= if @current_version do %>
    <%= for process <- @current_version.processes do %>
      <%= live_component(@socket, GroupComponent, [
          id: ID.group("process", process.id),
          parent: @current_version,
          state_opts: @state_opts,
          object: process,
          object_type: UserDocs.Automation.Process,
          object_form: ProcessLive.FormComponent,
          runner:
            live_component(@socket, ProcessLive.Runner, [
              id: "process-" <> Integer.to_string(process.id) <> "-runner",
              process: process
            ]),
          header_form:
            live_component(@socket, ProcessLive.FormComponent, [
              action: :edit,
              process: process,
              parent_id: process.id,
              id: ID.form(process, :edit, UserDocs.Automation.Process),
              parent: @current_version,
              type: UserDocs.Automation.Process,
              data: %{
                processes: @data.processes,
                step_types: @data.step_types,
                annotation_types: @data.annotation_types,
                pages: @data.pages
              },
              select_lists: %{
                versions: UserDocs.Helpers.select_list(@data.versions, :name, false)
              }
            ]),
          footer_form:
            live_component(@socket, StepLive.FormComponent, [
              action: :new,
              step: %Step{},
              id: ID.form(process, :new, UserDocs.Automation.Step),
              state_opts: @state_opts,
              parent_id: process.id,
              parent: process,
              type: UserDocs.Automation.Step,
              data: %{
                processes: @data.processes,
                step_types: @data.step_types,
                annotation_types: @data.annotation_types,
                pages: @data.pages
              },
              select_lists: %{
                step_types_select: UserDocs.Helpers.select_list(@data.step_types, :name, false),
                annotation_types: UserDocs.Helpers.select_list(@data.annotation_types, :name, true),
                processes_select: UserDocs.Helpers.select_list(
                  Enum.filter(@data.processes || [], fn(p) -> p.version_id == Map.get(@current_version, :id, nil) end), :name, false)
              }
            ]),
          data: %{
            steps: @data.steps,
            pages: @data.pages, # Only needed because I have recent navigated page on :new step forms
            processes: @data.processes,
            step_types: @data.step_types,
            annotation_types: @data.annotation_types,
          }
        ])
      do %>
        <%= for step <- process.steps do %>

          <%= live_component(@socket, CollapsableFormComponent,
            [
              id: ID.collapsable_form("step", step.id),
              title: step.name,
              runner:
                live_component(@socket, StepLive.Runner, [
                  id: "step-" <> Integer.to_string(step.id) <> "-runner",
                  step: step,
                  step_type_name: step.step_type.name])
            ])
          do %>

            <%= live_component(@socket, StepLive.FormComponent, [
                action: :edit,
                step: step,
                id: ID.form(step, :edit, Step),
                parent: process,
                parent_id: Map.get(process, :id, nil),
                type: Step,
                current_version_id: @current_version.id,
                state_opts: @state_opts,
                data: %{
                  annotation_types: @data.annotation_types,
                  content_versions: @data.content_versions,
                  annotations: @data.annotations,
                  strategies: @data.strategies,
                  step_types: @data.step_types,
                  processes: @data.processes,
                  elements: @data.elements,
                  projects: @data.projects,
                  content: @data.content,
                  pages: @data.pages,
                },
                select_lists: %{
                  teams: UserDocs.Helpers.select_list(@data.teams, :name, false),
                  strategies: UserDocs.Helpers.select_list(@data.strategies, :name, true),
                  language_codes: UserDocs.Helpers.select_list(@data.language_codes, :code, false),
                  step_types_select: UserDocs.Helpers.select_list(@data.step_types, :name, false),
                  annotations:
                    UserDocs.Helpers.select_list(
                      Enum.filter(@data.annotations, fn(a) -> a.page_id == step.page_id end),
                      :name, true),
                  elements_select:
                    UserDocs.Helpers.select_list(
                      Enum.filter(@data.elements,
                        fn(e) ->
                          e.page_id == recent_page_id(process, step, @data.pages)
                        end),
                      :name, true),
                  content: UserDocs.Helpers.select_list(@data.content, :name, true),
                  content_versions: UserDocs.Helpers.select_list(@data.content_versions, :name, false),
                  versions: UserDocs.Helpers.select_list(@data.versions, :name, false),
                  processes_select: UserDocs.Helpers.select_list(
                    Enum.filter(@data.processes, fn(p) -> p.version_id == @current_version.id end), :name, false),
                  pages_select: UserDocs.Helpers.select_list(
                    Enum.filter(@data.pages, fn(p) -> p.version_id == @current_version.id end), :name, true),
                  annotation_types: UserDocs.Helpers.select_list(@data.annotation_types, :name, true),
                }])
            %>

          <% end %>
        <% end %>
      <% end %>
    <% end %>
    <div class="card">
      <a
        phx-click="new-process"
        phx-value-current-project-id=<%= @current_project.id %>
        phx-value-current-version-id=<%= @current_version.id %>
        class="card-footer-item"
      >New Process</a>
    </div>
    <%= live_component(@socket, UserDocsWeb.ScreenShotHandler, [ id: "screenshot-handler-component" ]) %>
    <%= live_component(@socket, UserDocsWeb.SelectorHandler, [ id: "selector-handler" ]) %>
    <div id="selector-tester" phx-hook="testSelector"></div>
  <% end %>

  <nav class="navbar is-fixed-bottom" role="navigation" aria-label="main navigation">
    <div class="navbar-brand">
      <div class="navbar-item">
        <div class="field is-grouped">
          <%= f = form_for :current_strategy, "#", phx_change: "update_current_strategy"%>
            <div class="control">
              <div class="select">
                <%= select f, :strategy_id,
                  UserDocs.Helpers.select_list(@data.strategies, :name, false),
                  value: @current_strategy.id,
                  id: "current-strategy",
                  phx_hook: "configure"
                %>
              </div>
            </div>
          </form>
          <%= f = form_for :selected, "#" %>
            <div>
              <div class="select">
                <%= select f, :strategy_transfer_field,
                  UserDocs.Helpers.select_list(@data.strategies, :name, false),
                  value: @transferred_strategy.id,
                  id: "strategy-transfer-field",
                  disabled: true
                %>
              </div>
            </div>
          </form>
          <p class="control">
            <input
              class="input"
              type="text"
              placeholder="Selector"
              id="selector-transfer-field"
              value="<%= @transferred_selector %>"
            >
          </p>
        </div>
      </div>
    </div>
  </nav>
</main>
